/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.util.iperf;

public class iPerfResultCallbacks {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected iPerfResultCallbacks(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(iPerfResultCallbacks obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        libiperfJNI.delete_iPerfResultCallbacks(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  protected void swigDirectorDisconnect() {
    swigCMemOwn = false;
    delete();
  }

  public void swigReleaseOwnership() {
    swigCMemOwn = false;
    libiperfJNI.iPerfResultCallbacks_change_ownership(this, swigCPtr, false);
  }

  public void swigTakeOwnership() {
    swigCMemOwn = true;
    libiperfJNI.iPerfResultCallbacks_change_ownership(this, swigCPtr, true);
  }

  public iPerfResultCallbacks() {
    this(libiperfJNI.new_iPerfResultCallbacks(), true);
    libiperfJNI.iPerfResultCallbacks_director_connect(this, swigCPtr, swigCMemOwn, true);
  }

  public void onIntermediateResult(double bits, boolean download) {
    if (getClass() == iPerfResultCallbacks.class) libiperfJNI.iPerfResultCallbacks_onIntermediateResult(swigCPtr, this, bits, download); else libiperfJNI.iPerfResultCallbacks_onIntermediateResultSwigExplicitiPerfResultCallbacks(swigCPtr, this, bits, download);
  }

  public void onSummaryResult(double totalBits, int count, boolean download) {
    if (getClass() == iPerfResultCallbacks.class) libiperfJNI.iPerfResultCallbacks_onSummaryResult(swigCPtr, this, totalBits, count, download); else libiperfJNI.iPerfResultCallbacks_onSummaryResultSwigExplicitiPerfResultCallbacks(swigCPtr, this, totalBits, count, download);
  }

}
