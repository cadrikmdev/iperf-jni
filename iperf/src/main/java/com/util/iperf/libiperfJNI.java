/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.util.iperf;

public class libiperfJNI {
  public final static native long new_StringVector__SWIG_0();
  public final static native long new_StringVector__SWIG_1(long jarg1);
  public final static native long StringVector_size(long jarg1, StringVector jarg1_);
  public final static native long StringVector_capacity(long jarg1, StringVector jarg1_);
  public final static native void StringVector_reserve(long jarg1, StringVector jarg1_, long jarg2);
  public final static native boolean StringVector_isEmpty(long jarg1, StringVector jarg1_);
  public final static native void StringVector_clear(long jarg1, StringVector jarg1_);
  public final static native void StringVector_add(long jarg1, StringVector jarg1_, String jarg2);
  public final static native String StringVector_get(long jarg1, StringVector jarg1_, int jarg2);
  public final static native void StringVector_set(long jarg1, StringVector jarg1_, int jarg2, String jarg3);
  public final static native void delete_StringVector(long jarg1);
  public final static native long new_IntVector__SWIG_0();
  public final static native long new_IntVector__SWIG_1(long jarg1);
  public final static native long IntVector_size(long jarg1, IntVector jarg1_);
  public final static native long IntVector_capacity(long jarg1, IntVector jarg1_);
  public final static native void IntVector_reserve(long jarg1, IntVector jarg1_, long jarg2);
  public final static native boolean IntVector_isEmpty(long jarg1, IntVector jarg1_);
  public final static native void IntVector_clear(long jarg1, IntVector jarg1_);
  public final static native void IntVector_add(long jarg1, IntVector jarg1_, int jarg2);
  public final static native int IntVector_get(long jarg1, IntVector jarg1_, int jarg2);
  public final static native void IntVector_set(long jarg1, IntVector jarg1_, int jarg2, int jarg3);
  public final static native void delete_IntVector(long jarg1);
  public final static native long new_VecDouble__SWIG_0();
  public final static native long new_VecDouble__SWIG_1(long jarg1);
  public final static native long VecDouble_size(long jarg1, VecDouble jarg1_);
  public final static native long VecDouble_capacity(long jarg1, VecDouble jarg1_);
  public final static native void VecDouble_reserve(long jarg1, VecDouble jarg1_, long jarg2);
  public final static native boolean VecDouble_isEmpty(long jarg1, VecDouble jarg1_);
  public final static native void VecDouble_clear(long jarg1, VecDouble jarg1_);
  public final static native void VecDouble_add(long jarg1, VecDouble jarg1_, double jarg2);
  public final static native double VecDouble_get(long jarg1, VecDouble jarg1_, int jarg2);
  public final static native void VecDouble_set(long jarg1, VecDouble jarg1_, int jarg2, double jarg3);
  public final static native void delete_VecDouble(long jarg1);
  public final static native long new_iPerfResultCallbacks();
  public final static native void delete_iPerfResultCallbacks(long jarg1);
  public final static native void iPerfResultCallbacks_onIntermediateResult(long jarg1, iPerfResultCallbacks jarg1_, double jarg2, boolean jarg3);
  public final static native void iPerfResultCallbacks_onIntermediateResultSwigExplicitiPerfResultCallbacks(long jarg1, iPerfResultCallbacks jarg1_, double jarg2, boolean jarg3);
  public final static native void iPerfResultCallbacks_onSummaryResult(long jarg1, iPerfResultCallbacks jarg1_, double jarg2, int jarg3, boolean jarg4);
  public final static native void iPerfResultCallbacks_onSummaryResultSwigExplicitiPerfResultCallbacks(long jarg1, iPerfResultCallbacks jarg1_, double jarg2, int jarg3, boolean jarg4);
  public final static native void iPerfResultCallbacks_director_connect(iPerfResultCallbacks obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void iPerfResultCallbacks_change_ownership(iPerfResultCallbacks obj, long cptr, boolean take_or_release);
  public final static native long new_iPerf(String jarg1, int jarg2, String jarg3, int jarg4, int jarg5, boolean jarg6);
  public final static native void delete_iPerf(long jarg1);
  public final static native void iPerf_deInit(long jarg1, iPerf jarg1_);
  public final static native void iPerf_init(long jarg1, iPerf jarg1_);
  public final static native void iPerf_run(long jarg1, iPerf jarg1_);
  public final static native String iPerf_getHostname(long jarg1, iPerf jarg1_);
  public final static native void iPerf_setHostname(long jarg1, iPerf jarg1_, String jarg2);
  public final static native int iPerf_getPort(long jarg1, iPerf jarg1_);
  public final static native void iPerf_setPort(long jarg1, iPerf jarg1_, int jarg2);
  public final static native String iPerf_getStreamTemplate(long jarg1, iPerf jarg1_);
  public final static native void iPerf_setStreamTemplate(long jarg1, iPerf jarg1_, String jarg2);
  public final static native int iPerf_getDuration(long jarg1, iPerf jarg1_);
  public final static native void iPerf_setDuration(long jarg1, iPerf jarg1_, int jarg2);
  public final static native int iPerf_getInterval(long jarg1, iPerf jarg1_);
  public final static native void iPerf_setInterval(long jarg1, iPerf jarg1_, int jarg2);
  public final static native boolean iPerf_isDebug(long jarg1, iPerf jarg1_);
  public final static native void iPerf_setDebug(long jarg1, iPerf jarg1_, boolean jarg2);
  public final static native boolean iPerf_isDownload(long jarg1, iPerf jarg1_);
  public final static native void iPerf_setDownload(long jarg1, iPerf jarg1_, boolean jarg2);
  public final static native void iPerf_updatedIntermediateResult(long jarg1, iPerf jarg1_, double jarg2);
  public final static native void iPerf_updateSummaryResult(long jarg1, iPerf jarg1_);
  public final static native void iPerf_results_set(long jarg1, iPerf jarg1_, long jarg2, VecDouble jarg2_);
  public final static native long iPerf_results_get(long jarg1, iPerf jarg1_);
  public final static native void iPerf_director_connect(iPerf obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void iPerf_change_ownership(iPerf obj, long cptr, boolean take_or_release);
  public final static native long iPerf_SWIGUpcast(long jarg1);

  public static void SwigDirector_iPerfResultCallbacks_onIntermediateResult(iPerfResultCallbacks jself, double bits, boolean download) {
    jself.onIntermediateResult(bits, download);
  }
  public static void SwigDirector_iPerfResultCallbacks_onSummaryResult(iPerfResultCallbacks jself, double totalBits, int count, boolean download) {
    jself.onSummaryResult(totalBits, count, download);
  }
  public static void SwigDirector_iPerf_onIntermediateResult(iPerf jself, double bits, boolean download) {
    jself.onIntermediateResult(bits, download);
  }
  public static void SwigDirector_iPerf_onSummaryResult(iPerf jself, double totalBits, int count, boolean download) {
    jself.onSummaryResult(totalBits, count, download);
  }

  private final static native void swig_module_init();
  static {
    swig_module_init();
  }
}
